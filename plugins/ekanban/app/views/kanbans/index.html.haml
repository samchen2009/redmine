.contextual
  %span Your current wip:
  = link_to "#{User.current.wip} ", my_page_path()
  %span  Limit:
  = link_to "#{User.current.wip_limit} ", edit_user_path(User.current.id)
  = link_to l(:label_kanban_new), new_project_kanban_path(@project.id), :class => 'icon icon-add'
%h2 Kanbans

/ = javascript_include_tag 'kanban.js', :plugin => 'scrum2b' %>
= stylesheet_link_tag 'kanban', :plugin => :ekanban
= javascript_include_tag "jquery-1.8.2.js", :plugin => :ekanban
/= stylesheet_link_tag "http://code.jquery.com/ui/1.9.1/themes/base/jquery-ui.css"
= stylesheet_link_tag "jquery-ui-1.9.2.css", :plugin => :ekanban
= javascript_include_tag "jquery-ui-1.9.2.js", :plugin => :ekanban
= javascript_include_tag "select_list_move"
= javascript_include_tag "kanban", :plugin => :ekanban
= javascript_include_tag "kanban_api", :plugin => :ekanban

#kanban_filter
  = render :partial => "filter_board"

/ = stylesheet_link_tag 'version', :plugin => 'kanbans'
#kanban_boards
  = render :partial => "kanban_board", :collection => @kanbans, :as => :kanban

#popupWindow{:title => "Edit kanban card"}
  #popupWindowBody
    = render :partial => "kanban_card"
  #popupWindowFoot

/ Get rails variables from templates.
= content_tag "div", "", :id => "kanban-data"
= content_tag "div", "", :id => "my-profile", :data => {:user => @user, :roles => @roles}
= content_tag "div", "", :id => "project-profile", :data => {:project => @project}

:javascript
  $(function() {

    // Ignore case in contains()
    $.expr[":"].contains = $.expr.createPseudo(function(arg) {
      return function( elem ) {
        return $(elem).text().toUpperCase().indexOf(arg.toUpperCase()) >= 0;
      };
    });

    // Make the pane sortable.
    $( ".kanban-pane" ).sortable({
      connectWith: ".kanban-pane",
      start: function(event,ui){
        ui.item.removeClass("acceptable");
      },
      receive: function(event,ui){
        /* check */
        result = cardIsAccepted(ui.item,ui.sender,$(this));
        if (result.success){
          ui.item.addClass("acceptable");
        }else{
          console.debug("rejected:" + result.error);
          ui.item.removeClass("acceptable");
        }
        if (!ui.item.hasClass('acceptable')){
          ui.sender.sortable("cancel");
        }else{

          if (!confirm("Are you sure? Click 'OK' will update the moving to server")){
            ui.sender.sortable("cancel");
          }else{
            var popup = $("#popupWindow");
            popupCard(ui.sender,$(this),ui.item,popup,"drop");
            updatePanesWip(ui.sender,$(this));
          }
        }
      },
      remove: function(event,ui){
        ui.item.removeClass("acceptable");
      },
    });

    $(".kanan-card").draggable({
      connectToSortable: '.kanban-pane',
      revert: "invalid"
    });

    $( ".kanban-card" ).addClass( "ui-helper-clearfix ui-corner-all ")
      .find( ".card-header" )
        .addClass( "ui-widget-header ui-corner-all" )
        .prepend( "<span class='ui-icon ui-icon-minusthick'></span>")
        .end()
      .find( ".card-content" );

    $( ".card-header .ui-icon" ).click(function() {
      $( this ).toggleClass( "ui-icon-minusthick" ).toggleClass( "ui-icon-plusthick" );
      $( this ).parents( ".kanban-card:first" ).find( ".card-content" ).toggle();
    });
    $( ".kanban-pane" ).disableSelection();
    $( ".search-input" ).enableSelection();

    $("table").find("#backlog-minus-icon").click(function(){
      $(this).toggleClass("ui-icon-minusthick").toggleClass("ui-icon-plusthick");
      $(this).closest("table").find("td:eq(0)").find(".card-header .ui-icon").trigger("click");
    });

    $("table").find("#backlog-search-icon").click(function(){
      var input = $(this).closest("table").find("#search-input");
      input.toggle();
      if (input.is("autofocus"))
        input.focus(0);
      else
        input.focus(1);
      input.val("");
      input.trigger("keyup");
    });

    $("#search-input").keyup(function(){
      var keywords = $(this).val()
      if (keywords === "") {keywords="#"}
      $("#pane_1").find(".kanban-card")
        .hide()
        .filter(":contains('"+(keywords)+"')")
        .show();
      text = $("#wip_backlog").text();
      text = text.split(":");
      text = "(" + $("#pane_1").children(".kanban-card:visible").length + ":" + text[1];
      $("#wip_backlog").text(text);
    }).keyup();

    //$( document ).tooltip();

    $( document ).ready(function(){
      $(".kanban-card").bind("dblclick", function(){
        popupCard(null,null,$(this),$("#popupWindow"),"edit")
      });

      $("#popupSubmit").click(function(){
        /* Ajax update card here */
        updateCard();
      });
      $(".kanban-card a").css("color","blue");
      //Ajax Call.
      getKanbanStateIssueStatus();
      getKanbanStates();
      getKanbanWorkflow();
      getUserWipAndLimit($("#my-profile").data("user").user.id);

    });

    $(".kanban-card:contains('P0')").addClass("p1-color")
    $(".kanban-card:contains('P1')").addClass("p2-color")
    $(".kanban-card:contains('P2')").addClass("p3-color")
    $(".kanban-card:contains('P3')").addClass("p4-color")
    $(".kanban-card:contains('P4')").addClass("p5-color")
  });